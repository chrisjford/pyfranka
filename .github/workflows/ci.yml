name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        libfranka-version: ['0.8.0']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake libeigen3-dev libpoco-dev
        python -m pip install --upgrade pip

    - name: Install specific libfranka version
      run: |
        git clone --recurse-submodules https://github.com/frankaemika/libfranka.git
        cd libfranka
        git checkout ${{ matrix.libfranka-version }}
        # Add necessary includes and definitions
        sed -i '1i#include <stdexcept>' src/control_types.cpp
        sed -i '1i#include <stdexcept>' include/franka/control_types.h
        sed -i '1i#include <string>' include/franka/control_tools.h
        sed -i '1i#include <string>' src/control_tools.cpp
        sed -i '1i#include <array>' include/franka/gripper.h
        # Ensure proper includes and definitions in robot_impl.h and robot.cpp
        sed -i '1i#include <array>' src/robot_impl.h
        sed -i '1i#include <array>' src/robot.cpp
        sed -i '2i#include <research_interface/robot/service_types.h>' src/robot_impl.h
        sed -i '2i#include <research_interface/robot/service_types.h>' src/robot.cpp
        sed -i '3i struct GetCartesianLimit { struct Request {}; struct Response { std::array<double, 16> object_frame; double object_world_size; bool object_activation; }; };' src/robot_impl.h
        sed -i '4i struct SetFilters { struct Request {}; struct Response {}; };' src/robot_impl.h
        sed -i '3i struct GetCartesianLimit { struct Request {}; struct Response { std::array<double, 16> object_frame; double object_world_size; bool object_activation; }; };' src/robot.cpp
        sed -i '4i struct SetFilters { struct Request {}; struct Response {}; };' src/robot.cpp
        mkdir build
        cd build
        cmake ..
        make
        sudo make install
        cd ../..
        sudo rm -rf libfranka

    - name: Set CMAKE_PREFIX_PATH
      run: echo "CMAKE_PREFIX_PATH=/usr/local" >> $GITHUB_ENV

    - name: Install Python dependencies
      run: python -m pip install .

    - name: Run tests
      run: |
        python -m pip install pytest
        pytest
